---
import { Image } from 'astro:assets';
import extensionImg from '@/assets/extension.png';
import { Icon } from 'astro-icon/components';
import { chromeExtension } from '@/data/features';

const { defaultUrl } = chromeExtension;
---

<div class="bg-[#171A24] rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 lg:col-span-1 flex flex-col">
  <div class="flex-1">
    <div class="bg-white/[0.07] rounded-xl sm:rounded-2xl px-4 sm:px-6 pt-4 sm:pt-6">
      <h3 class="text-xs sm:text-sm mb-3 sm:mb-4 text-center pb-3 sm:pb-4 border-b border-[#444650]">
        Convert this page
      </h3>

      <div class="bg-white/[0.12] rounded-lg sm:rounded-xl p-2 sm:p-3 flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6 relative">
        <button 
          class="copy-btn transition-transform duration-200 hover:scale-110 active:scale-95"
          data-url={defaultUrl}
          aria-label="Copy URL to clipboard"
        >
          <Icon name="link" class="w-3 h-3 sm:w-4 sm:h-4" />
        </button>
        <span class="text-base sm:text-lg truncate">{defaultUrl}</span>
        <div class="popup absolute -top-8 left-0 bg-black/80 text-white text-xs py-1 px-2 rounded transition-opacity duration-200 opacity-0">
          Copied to clipboard!
        </div>
      </div>

      <div class="relative">
        <Image 
          src={extensionImg} 
          alt="Chrome Extension Screenshot" 
          class="w-full rounded-lg"
          format="webp"
          loading="lazy"
          quality={90}
        />
      </div>
    </div>
  </div>

  <div class="mt-4 sm:mt-5 lg:mt-6">
    <h3 class="text-2xl sm:text-2xl lg:text-3xl font-black mb-3 lg:mb-4">
      {chromeExtension.title}
    </h3>
    <p class="text-white/70 text-xs sm:text-sm font-light">
      {chromeExtension.description}
    </p>
  </div>
</div>

<script>
  document.querySelectorAll('.copy-btn').forEach(button => {
    button.addEventListener('click', async () => {
      const url = button.getAttribute('data-url') || '';
      await navigator.clipboard.writeText(url);
      
      const popup = button.parentElement?.querySelector('.popup');
      if (popup) {
        popup.classList.remove('opacity-0');
        popup.classList.add('opacity-100');
        
        setTimeout(() => {
          popup.classList.remove('opacity-100');
          popup.classList.add('opacity-0');
        }, 2000);
      }
    });
  });
</script>
