---
import { scrollItems } from '@data/features';

const rows = [
  { animationClass: 'animate-scroll-1', itemClass: 'scroll-item-top' },
  { animationClass: 'animate-scroll-2', itemClass: 'scroll-item-middle' },
  { animationClass: 'animate-scroll-3', itemClass: 'scroll-item-top' }
];

const multiplyItems = (items: typeof scrollItems, times: number) => {
  return Array(times).fill(null).flatMap(() => items);
};

const repeatedItems = multiplyItems(scrollItems, 4);
---

<div class="scroll-container">
  {rows.map(({ animationClass, itemClass }) => (
    <div class={`scroll-row ${animationClass}`}>
      {repeatedItems.map((item) => (
        <div class={`scroll-item ${itemClass}`}>
          <span class="px-1">{item.icon}</span>
          <span class="text-sm font-extralight">{item.text}</span>
        </div>
      ))}
    </div>
  ))}
</div>

<style>
  /* Keyframes for a continuous scroll from 0% to -50% */
  @keyframes scroll-1 {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  @keyframes scroll-2 {
    0% {
      transform: translateX(-25%);
    }
    100% {
      transform: translateX(-75%);
    }
  }
  @keyframes scroll-3 {
    0% {
      transform: translateX(-50%);
    }
    100% {
      transform: translateX(0);
    }
  }

  /* Classes to apply the animations */
  .animate-scroll-1 {
    animation: scroll-1 20s linear infinite;
    white-space: nowrap; /* prevent wrapping */
  }
  .animate-scroll-2 {
    animation: scroll-2 20s linear infinite;
    white-space: nowrap; /* prevent wrapping */
  }
  .animate-scroll-3 {
    animation: scroll-3 20s linear infinite;
    white-space: nowrap; /* prevent wrapping */
  }

  /* Pause animation on hover */
  .animate-scroll-1:hover,
  .animate-scroll-2:hover,
  .animate-scroll-3:hover {
    animation-play-state: paused;
  }
</style>