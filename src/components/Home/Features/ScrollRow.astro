---
import { scrollItems } from '@data/features';

const rows = [
  { animationClass: 'animate-scroll-1' },
  { animationClass: 'animate-scroll-2' },
  { animationClass: 'animate-scroll-3' }
];

const multiplyItems = (items: typeof scrollItems, times: number) => {
  return Array(times).fill(null).flatMap(() => items);
};

const repeatedItems = multiplyItems(scrollItems, 4); // Repeat items 4 times
---

<div class="scroll-container overflow-hidden w-full">
  {rows.map(({ animationClass }) => (
    <div class={`scroll-row flex gap-4 sm:gap-6 py-2 ${animationClass}`}>
      {repeatedItems.map((item) => (
        <div class="scroll-item flex items-center gap-2 sm:gap-3  bg-[#171A2480]  rounded-lg border border-white/10">
          <span class="text-lg sm:text-xl text-[#FF4D4D]">{item.icon}</span>
          <span class="text-white/80 text-xs sm:text-sm font-medium">{item.text}</span>
        </div>
      ))}
    </div>
  ))}
</div>

<style>
  /* Keyframes for a continuous scroll from 0% to -50% */
  @keyframes scroll-1 {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  @keyframes scroll-2 {
    0% {
      transform: translateX(-25%);
    }
    100% {
      transform: translateX(-75%);
    }
  }
  @keyframes scroll-3 {
    0% {
      transform: translateX(-25%);
    }
    100% {
      transform: translateX(0);
    }
  }

  /* Classes to apply the animations */
  .animate-scroll-1 {
    animation: scroll-1 20s linear infinite;
    white-space: nowrap;
  }
  .animate-scroll-2 {
    animation: scroll-2 20s linear infinite;
    white-space: nowrap;
  }
  .animate-scroll-3 {
    animation: scroll-3 20s linear infinite;
    white-space: nowrap;
  }

  /* Pause animation on hover */
  .animate-scroll-1:hover,
  .animate-scroll-2:hover,
  .animate-scroll-3:hover {
    animation-play-state: paused;
  }
</style>
